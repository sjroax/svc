pipeline {
   agent any  
   
   environment {
        APP_NAME = 'ap1'
        SERVICE_NAME = 'svc1'
	}
   
   
   parameters { 
       choice(name: 'ACTION', choices: ['INIT', 'DEPLOY', 'START', 'STOP', 'DELETE', ], description: 'SELECT THE ACTION YOU WANT TO PERFORM WITH THIS SERVICE ') 
       choice(name: 'SELECT_ENV', choices: ['test-env', 'prod-env', ], description: 'SELECT THE ENV OF THE SERVICE  ')
   }
   
   stages {

	  stage("Service Existence Check"){
		
		steps{
			sh '''

			svc_exist=0
			app_exist=0
			env_exist=0
			
			if [[ $(copilot app ls | grep $APP_NAME) == $APP_NAME ]]; 
			then 
				app_exist=1
				if [[ $(copilot env ls --app $APP_NAME | grep $SELECT_ENV ) == $SELECT_ENV ]]; 
				then 
					env_exist=1
					if [[ $(copilot svc ls -a $APP_NAME | awk '{print $1}' | grep $SERVICE_NAME ) == $SERVICE_NAME ]]; 
					then 
						if [[ $(copilot svc show --app $APP_NAME  --name $SERVICE_NAME --json | jq '.configurations[].environment' | sed 's/\"//g' | grep $SELECT_ENV) == $SELECT_ENV ]]; 
						then 
							svc_exist=1
						fi
					fi
				fi
			fi




			if [[ "$ACTION" == "INIT"  ]] && [[ $svc_exist == 1  ]]; 
			then 
				echo "Service Already exist. Please choose the Action other than INIT for this service"
				exit
			elif [[ "$ACTION" != "INIT"  ]] && [[ $svc_exist == 0  ]];
			then
				echo "Service does not exist. Please Initialize the service by re-running the pipleline and select the INIT action"
				exit
			else
				echo "Continue the execution in next stage"
			fi

			echo -e "app_exist=$app_exist\nenv_exist$env_exist\nsvc_exist=$svc_exist" > /tmp/variable.tmp
			
			'''
		
			}
	  	}

	  stage("Action Execution"){
		
		steps{
			
			sh ''' 
				source /tmp/variable.tmp
				echo $svc_exist
				echo $app_exist
				echo $env_exist
				
			'''
			}
		}
		
     }
}
